{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-6-d2f1f5a03269>, line 23)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-6-d2f1f5a03269>\"\u001b[0;36m, line \u001b[0;32m23\u001b[0m\n\u001b[0;31m    import /edit/functions.py as fun\u001b[0m\n\u001b[0m           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import statsmodels.api as sm\n",
    "import itertools\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import statsmodels.graphics.tsaplots as tsa\n",
    "\n",
    "# plt.style.use('fivethirtyeight')\n",
    "# %matplotlib inline\n",
    "from matplotlib.pylab import rcParams\n",
    "rcParams['figure.figsize'] = 13, 8\n",
    "\n",
    "import plotly.express as px\n",
    "\n",
    "\n",
    "\n",
    "import functions.py as fun\n",
    "\n",
    "\n",
    "\n",
    "import datetime\n",
    "import seaborn as sns\n",
    "sns.set()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# plotting dfs:\n",
    "('roi_df_plotting.csv')\n",
    "('top_percent_roi_plotting.csv')\n",
    "('chi_plot.csv')\n",
    "\n",
    "# modeling dfs:\n",
    "('top_roi_for_melting.csv')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('chicago_melted.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Time'] = pd.to_datetime(df['Time'], format='%Y-%m')\n",
    "df.set_index('Time', inplace = True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "zip_dict = {}\n",
    "zip_list = df.ZipCode.unique()\n",
    "for x in zip_list:\n",
    "    ts = (df[df['ZipCode']==x]['Value'].copy())\n",
    "    ts.name = x \n",
    "    zip_dict[x] = ts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'zip_dict' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-2-9cec5f3f6a08>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mzip_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m60647\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'zip_dict' is not defined"
     ]
    }
   ],
   "source": [
    "zip_dict[60647]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "# zip_df = pd.DataFrame(pd.concat(zip_dict))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# zip_series = pd.concat(zip_dict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RangeIndex(start=0, stop=1, step=1)"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# zip_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "p = d = q = range(0,2)\n",
    "pdq = list(itertools.product(p,d,q))\n",
    "pdqs = [(x[0], x[1], x[2], 12) for x in list(itertools.product(p, d, q))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "zip_dfs = []\n",
    "zip_list = df.ZipCode.unique()\n",
    "for x in zip_list:\n",
    "    zip_dfs.append(pd.DataFrame(df[df['ZipCode']==x][['Value']].copy()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "ans = []\n",
    "for df, name in zip(zip_dfs, zip_list):\n",
    "    for para1 in pdq:\n",
    "        for para2 in pdqs:\n",
    "            try:\n",
    "                mod = sm.tsa.statespace.SARIMAX(df,\n",
    "                                                order = para1,\n",
    "                                                seasonal_order = para2,\n",
    "                                                enforce_stationarity = False,\n",
    "                                                enforce_invertibility = False)\n",
    "                output = mod.fit()\n",
    "                ans.append([name, para1, para2, output.aic])\n",
    "                print('Result for {}'.format(name) + ' ARIMA {} x {}12 : AIC Calculated = {}'.format(para1, para2, output.aic))\n",
    "            except:\n",
    "                continue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>pdq</th>\n",
       "      <th>pdqs</th>\n",
       "      <th>AIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>60657</td>\n",
       "      <td>(0, 0, 0)</td>\n",
       "      <td>(0, 0, 0, 12)</td>\n",
       "      <td>2631.896915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>60657</td>\n",
       "      <td>(0, 0, 0)</td>\n",
       "      <td>(0, 0, 1, 12)</td>\n",
       "      <td>2230.124144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>60657</td>\n",
       "      <td>(0, 0, 0)</td>\n",
       "      <td>(0, 1, 0, 12)</td>\n",
       "      <td>1835.896786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>60657</td>\n",
       "      <td>(0, 0, 0)</td>\n",
       "      <td>(0, 1, 1, 12)</td>\n",
       "      <td>1545.195398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>60657</td>\n",
       "      <td>(0, 0, 0)</td>\n",
       "      <td>(1, 0, 0, 12)</td>\n",
       "      <td>1736.345346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1275</th>\n",
       "      <td>60608</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(0, 1, 1, 12)</td>\n",
       "      <td>1068.956038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1276</th>\n",
       "      <td>60608</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(1, 0, 0, 12)</td>\n",
       "      <td>1234.789959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1277</th>\n",
       "      <td>60608</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(1, 0, 1, 12)</td>\n",
       "      <td>1215.892289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1278</th>\n",
       "      <td>60608</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(1, 1, 0, 12)</td>\n",
       "      <td>1092.400975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1279</th>\n",
       "      <td>60608</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(1, 1, 1, 12)</td>\n",
       "      <td>1074.720498</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1280 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       name        pdq           pdqs          AIC\n",
       "0     60657  (0, 0, 0)  (0, 0, 0, 12)  2631.896915\n",
       "1     60657  (0, 0, 0)  (0, 0, 1, 12)  2230.124144\n",
       "2     60657  (0, 0, 0)  (0, 1, 0, 12)  1835.896786\n",
       "3     60657  (0, 0, 0)  (0, 1, 1, 12)  1545.195398\n",
       "4     60657  (0, 0, 0)  (1, 0, 0, 12)  1736.345346\n",
       "...     ...        ...            ...          ...\n",
       "1275  60608  (1, 1, 1)  (0, 1, 1, 12)  1068.956038\n",
       "1276  60608  (1, 1, 1)  (1, 0, 0, 12)  1234.789959\n",
       "1277  60608  (1, 1, 1)  (1, 0, 1, 12)  1215.892289\n",
       "1278  60608  (1, 1, 1)  (1, 1, 0, 12)  1092.400975\n",
       "1279  60608  (1, 1, 1)  (1, 1, 1, 12)  1074.720498\n",
       "\n",
       "[1280 rows x 4 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = pd.DataFrame(ans, columns = ['name','pdq','pdqs','AIC'])\n",
    "result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>pdq</th>\n",
       "      <th>pdqs</th>\n",
       "      <th>AIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1275</th>\n",
       "      <td>60608</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(0, 1, 1, 12)</td>\n",
       "      <td>1068.956038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>639</th>\n",
       "      <td>60610</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(1, 1, 1, 12)</td>\n",
       "      <td>1194.672075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>60613</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(0, 1, 1, 12)</td>\n",
       "      <td>1151.599769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>60614</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(1, 1, 1, 12)</td>\n",
       "      <td>1142.278135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1087</th>\n",
       "      <td>60615</td>\n",
       "      <td>(1, 1, 1)</td>\n",
       "      <td>(1, 1, 1, 12)</td>\n",
       "      <td>1137.320581</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       name        pdq           pdqs          AIC\n",
       "1275  60608  (1, 1, 1)  (0, 1, 1, 12)  1068.956038\n",
       "639   60610  (1, 1, 1)  (1, 1, 1, 12)  1194.672075\n",
       "379   60613  (1, 1, 1)  (0, 1, 1, 12)  1151.599769\n",
       "127   60614  (1, 1, 1)  (1, 1, 1, 12)  1142.278135\n",
       "1087  60615  (1, 1, 1)  (1, 1, 1, 12)  1137.320581"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_para = result.loc[result.groupby(\"name\")[\"AIC\"].idxmin()]\n",
    "best_para.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/base/model.py:568: ConvergenceWarning:\n",
      "\n",
      "Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/base/model.py:568: ConvergenceWarning:\n",
      "\n",
      "Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n",
      "/Users/leighannahooper/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/tsa/base/tsa_model.py:162: ValueWarning:\n",
      "\n",
      "No frequency information was provided, so inferred frequency MS will be used.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Predictions and comparisons\n",
    "summary_table = pd.DataFrame()\n",
    "Zipcode = []\n",
    "MSE_Value = []\n",
    "RMSE_Value = []\n",
    "models = []\n",
    "for name, pdq, pdqs, df in zip(best_para['name'], best_para['pdq'], best_para['pdqs'], zip_dfs):\n",
    "    ARIMA_MODEL = sm.tsa.SARIMAX(df,\n",
    "                                 order = pdq,\n",
    "                                 seasonal_order = pdqs,\n",
    "                                 enforce_stationarity = False,\n",
    "                                 enforce_invertibility = False,\n",
    "                                 )\n",
    "                                \n",
    "    \n",
    "    output = ARIMA_MODEL.fit()\n",
    "    models.append(output)\n",
    "    \n",
    "    # 2015-04-01 - 3 years so we can forecast 3 years out\n",
    "    pred_dynamic = output.get_prediction(start=pd.to_datetime('2015-04-01'), dynamic = True, full_results = True)\n",
    "    pred_dynamic_conf = pred_dynamic.conf_int()\n",
    "    zip_forecasted = pred_dynamic.predicted_mean\n",
    "    zip_truth = df['2015-04-01':]['Value']\n",
    "    \n",
    "    rmse = np.sqrt(((zip_forecasted - zip_truth)**2).mean())\n",
    "    mse = ((zip_forecasted - zip_truth)**2).mean()\n",
    "    \n",
    "    Zipcode.append(name)\n",
    "    RMSE_Value.append(rmse)\n",
    "    MSE_Value.append(mse)\n",
    "    \n",
    "summary_table['Zipcode'] = Zipcode\n",
    "summary_table['MSE'] = MSE_Value\n",
    "summary_table['RMSE'] = RMSE_Value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zipcode</th>\n",
       "      <th>MSE</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>60608</td>\n",
       "      <td>1.911793e+08</td>\n",
       "      <td>13826.760465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>60610</td>\n",
       "      <td>1.081093e+08</td>\n",
       "      <td>10397.560668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>60613</td>\n",
       "      <td>7.113388e+09</td>\n",
       "      <td>84340.905094</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>60614</td>\n",
       "      <td>9.256856e+08</td>\n",
       "      <td>30425.081876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>60615</td>\n",
       "      <td>5.723902e+08</td>\n",
       "      <td>23924.677219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>60616</td>\n",
       "      <td>4.236106e+08</td>\n",
       "      <td>20581.802606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>60618</td>\n",
       "      <td>2.202322e+06</td>\n",
       "      <td>1484.022235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>60619</td>\n",
       "      <td>1.811385e+09</td>\n",
       "      <td>42560.371225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>60620</td>\n",
       "      <td>2.246071e+07</td>\n",
       "      <td>4739.272906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>60622</td>\n",
       "      <td>2.278903e+09</td>\n",
       "      <td>47737.860671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>60625</td>\n",
       "      <td>8.700929e+07</td>\n",
       "      <td>9327.877188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>60626</td>\n",
       "      <td>1.686751e+08</td>\n",
       "      <td>12987.499735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>60629</td>\n",
       "      <td>1.155085e+08</td>\n",
       "      <td>10747.487121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>60634</td>\n",
       "      <td>3.861269e+09</td>\n",
       "      <td>62139.112805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>60640</td>\n",
       "      <td>1.306347e+09</td>\n",
       "      <td>36143.424405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>60641</td>\n",
       "      <td>1.251468e+10</td>\n",
       "      <td>111869.017038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>60647</td>\n",
       "      <td>1.381418e+09</td>\n",
       "      <td>37167.429109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>60649</td>\n",
       "      <td>3.928315e+07</td>\n",
       "      <td>6267.627062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>60657</td>\n",
       "      <td>3.268527e+09</td>\n",
       "      <td>57171.030612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>60660</td>\n",
       "      <td>1.196070e+08</td>\n",
       "      <td>10936.499674</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Zipcode           MSE           RMSE\n",
       "0     60608  1.911793e+08   13826.760465\n",
       "1     60610  1.081093e+08   10397.560668\n",
       "2     60613  7.113388e+09   84340.905094\n",
       "3     60614  9.256856e+08   30425.081876\n",
       "4     60615  5.723902e+08   23924.677219\n",
       "5     60616  4.236106e+08   20581.802606\n",
       "6     60618  2.202322e+06    1484.022235\n",
       "7     60619  1.811385e+09   42560.371225\n",
       "8     60620  2.246071e+07    4739.272906\n",
       "9     60622  2.278903e+09   47737.860671\n",
       "10    60625  8.700929e+07    9327.877188\n",
       "11    60626  1.686751e+08   12987.499735\n",
       "12    60629  1.155085e+08   10747.487121\n",
       "13    60634  3.861269e+09   62139.112805\n",
       "14    60640  1.306347e+09   36143.424405\n",
       "15    60641  1.251468e+10  111869.017038\n",
       "16    60647  1.381418e+09   37167.429109\n",
       "17    60649  3.928315e+07    6267.627062\n",
       "18    60657  3.268527e+09   57171.030612\n",
       "19    60660  1.196070e+08   10936.499674"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "summary_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                     SARIMAX Results                                      \n",
      "==========================================================================================\n",
      "Dep. Variable:                          MeanValue   No. Observations:                   88\n",
      "Model:             SARIMAX(1, 1, 1)x(0, 1, 1, 12)   Log Likelihood                -530.478\n",
      "Date:                            Wed, 11 Nov 2020   AIC                           1068.956\n",
      "Time:                                    18:38:00   BIC                           1077.400\n",
      "Sample:                                01-01-2011   HQIC                          1072.265\n",
      "                                     - 04-01-2018                                         \n",
      "Covariance Type:                              opg                                         \n",
      "==============================================================================\n",
      "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "ar.L1          0.6354      0.114      5.578      0.000       0.412       0.859\n",
      "ma.L1          0.7294      0.145      5.014      0.000       0.444       1.014\n",
      "ma.S.L12      -0.1182      0.071     -1.657      0.097      -0.258       0.022\n",
      "sigma2      2.093e+06   3.27e+05      6.390      0.000    1.45e+06    2.73e+06\n",
      "===================================================================================\n",
      "Ljung-Box (Q):                       65.39   Jarque-Bera (JB):                28.22\n",
      "Prob(Q):                              0.01   Prob(JB):                         0.00\n",
      "Heteroskedasticity (H):               0.60   Skew:                             0.48\n",
      "Prob(H) (two-sided):                  0.26   Kurtosis:                         6.19\n",
      "===================================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1296 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(output.summary())\n",
    "output.plot_diagnostics(figsize=(15, 18))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred = output.get_prediction(start=pd.to_datetime('2015-04-01'), dynamic=False)\n",
    "pred_conf = pred.conf_int()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = df['2011':].plot(label='observed')\n",
    "\n",
    "pred.predicted_mean.plot(ax=ax, label='One-step ahead Forecast', alpha=0.9, figsize=(13, 8))\n",
    "\n",
    "ax.fill_between(pred_conf.index,\n",
    "                pred_conf.iloc[:, 0],\n",
    "                pred_conf.iloc[:, 1], color='g', alpha=0.5)\n",
    "\n",
    "ax.set_xlabel('Date')\n",
    "ax.set_ylabel('Mean Value')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Root Mean Squared Error of our forecasts is 1267.131\n",
      "The Mean Squared Error of our forecasts is 1605619.79\n"
     ]
    }
   ],
   "source": [
    "zip_truth = df['2015-04':]\n",
    "zip_forecasted = pred.predicted_mean\n",
    "\n",
    "\n",
    "\n",
    "rmse = np.sqrt(mean_squared_error(zip_truth, zip_forecasted))\n",
    "mse = mean_squared_error(zip_truth, zip_forecasted)\n",
    "print(f'The Root Mean Squared Error of our forecasts is {round(rmse, 3)}')\n",
    "print(f'The Mean Squared Error of our forecasts is {round(mse, 3)}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred_dynamic = output.get_prediction(start=pd.to_datetime('2015-04-01'), dynamic=True, full_results=True)\n",
    "pred_dynamic_conf = pred_dynamic.conf_int()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = df['2011':].plot(label='observed', figsize=(13, 8))\n",
    "pred_dynamic.predicted_mean.plot(label='Dynamic Forecast', ax=ax)\n",
    "\n",
    "ax.fill_between(pred_dynamic_conf.index,\n",
    "                pred_dynamic_conf.iloc[:, 0],\n",
    "                pred_dynamic_conf.iloc[:, 1], color='g', alpha=.3)\n",
    "\n",
    "ax.fill_betweenx(ax.get_ylim(), pd.to_datetime('2011-01-01'), pred.predicted_mean.index[-1], alpha=.1, zorder=-1)\n",
    "\n",
    "ax.set_xlabel('Date')\n",
    "ax.set_ylabel('Mean Value')\n",
    "\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [],
   "source": [
    "Yr3_forecast_table = pd.DataFrame()\n",
    "current = []\n",
    "forecast_3Yr = []\n",
    "\n",
    "\n",
    "for zipcode, output, df in zip(Zipcode, models, zip_dfs):\n",
    "    pred_3 = output.get_forecast(steps = 36)\n",
    "    pred_conf_3 = pred_3.conf_int()\n",
    "    forecast_3 = pred_3.predicted_mean.to_numpy()[-1]\n",
    "    current.append(df['2018-04']['MeanValue'][0])\n",
    "    forecast_3Yr.append(forecast_3)\n",
    "    \n",
    "Yr3_forecast_table['Zipcode'] = Zipcode\n",
    "Yr3_forecast_table['Current Value'] = current\n",
    "Yr3_forecast_table['3 Years Value'] = forecast_3Yr\n",
    "Yr3_forecast_table['3Yr-ROI']=((Yr3_forecast_table['3 Years Value'] - Yr3_forecast_table['Current Value'])\n",
    "                           /Yr3_forecast_table['Current Value'])*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zipcode</th>\n",
       "      <th>Current Value</th>\n",
       "      <th>3 Years Value</th>\n",
       "      <th>3Yr-ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>60625</td>\n",
       "      <td>130300.0</td>\n",
       "      <td>1.629457e+05</td>\n",
       "      <td>25.054284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>60620</td>\n",
       "      <td>129600.0</td>\n",
       "      <td>1.580718e+05</td>\n",
       "      <td>21.968977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>60626</td>\n",
       "      <td>267600.0</td>\n",
       "      <td>3.223530e+05</td>\n",
       "      <td>20.460767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>60616</td>\n",
       "      <td>1055300.0</td>\n",
       "      <td>1.198630e+06</td>\n",
       "      <td>13.581951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>60618</td>\n",
       "      <td>163800.0</td>\n",
       "      <td>1.854676e+05</td>\n",
       "      <td>13.228082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Zipcode  Current Value  3 Years Value    3Yr-ROI\n",
       "10    60625       130300.0   1.629457e+05  25.054284\n",
       "8     60620       129600.0   1.580718e+05  21.968977\n",
       "11    60626       267600.0   3.223530e+05  20.460767\n",
       "5     60616      1055300.0   1.198630e+06  13.581951\n",
       "6     60618       163800.0   1.854676e+05  13.228082"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Yr3_forecast_table.sort_values('3Yr-ROI', ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "Yr5_forecast_table = pd.DataFrame()\n",
    "current = []\n",
    "forecast_5Yr = []\n",
    "\n",
    "\n",
    "for zipcode, output, df in zip(Zipcode, models, zip_dfs):\n",
    "    pred_5 = output.get_forecast(steps = 60)\n",
    "    pred_conf_5 = pred_5.conf_int()\n",
    "    forecast_5 = pred_5.predicted_mean.to_numpy()[-1]\n",
    "    current.append(df['2018-04']['Value'][0])\n",
    "    forecast_5Yr.append(forecast_3)\n",
    "    \n",
    "Yr5_forecast_table['Zipcode'] = Zipcode\n",
    "Yr5_forecast_table['Current Value'] = current\n",
    "Yr5_forecast_table['5 Years Value'] = forecast_5Yr\n",
    "Yr5_forecast_table['5Yr-ROI']=((Yr5_forecast_table['5 Years Value'] - Yr5_forecast_table['Current Value'])\n",
    "                           /Yr5_forecast_table['Current Value'])*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zipcode</th>\n",
       "      <th>Current Value</th>\n",
       "      <th>5 Years Value</th>\n",
       "      <th>5Yr-ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>60620</td>\n",
       "      <td>129600.0</td>\n",
       "      <td>237516.827612</td>\n",
       "      <td>83.269157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>60625</td>\n",
       "      <td>130300.0</td>\n",
       "      <td>237516.827612</td>\n",
       "      <td>82.284595</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>60634</td>\n",
       "      <td>136800.0</td>\n",
       "      <td>237516.827612</td>\n",
       "      <td>73.623412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>60618</td>\n",
       "      <td>163800.0</td>\n",
       "      <td>237516.827612</td>\n",
       "      <td>45.004168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>60660</td>\n",
       "      <td>236000.0</td>\n",
       "      <td>237516.827612</td>\n",
       "      <td>0.642724</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Zipcode  Current Value  5 Years Value    5Yr-ROI\n",
       "8     60620       129600.0  237516.827612  83.269157\n",
       "10    60625       130300.0  237516.827612  82.284595\n",
       "13    60634       136800.0  237516.827612  73.623412\n",
       "6     60618       163800.0  237516.827612  45.004168\n",
       "19    60660       236000.0  237516.827612   0.642724"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Yr5_forecast_table.sort_values('5Yr-ROI', ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Performing stepwise search to minimize aic\n",
      " ARIMA(1,1,1)(0,1,1)[12]             : AIC=inf, Time=0.27 sec\n",
      " ARIMA(0,1,0)(0,1,0)[12]             : AIC=1413.916, Time=0.01 sec\n",
      " ARIMA(1,1,0)(1,1,0)[12]             : AIC=1416.765, Time=0.22 sec\n",
      " ARIMA(0,1,1)(0,1,1)[12]             : AIC=1416.747, Time=0.17 sec\n",
      " ARIMA(0,1,0)(1,1,0)[12]             : AIC=1416.691, Time=0.03 sec\n",
      " ARIMA(0,1,0)(0,1,1)[12]             : AIC=1416.452, Time=0.05 sec\n",
      " ARIMA(0,1,0)(1,1,1)[12]             : AIC=1417.810, Time=0.06 sec\n",
      " ARIMA(1,1,0)(0,1,0)[12]             : AIC=1414.769, Time=0.05 sec\n",
      " ARIMA(0,1,1)(0,1,0)[12]             : AIC=1414.752, Time=0.05 sec\n",
      " ARIMA(1,1,1)(0,1,0)[12]             : AIC=inf, Time=0.09 sec\n",
      " ARIMA(0,1,0)(0,1,0)[12] intercept   : AIC=1415.808, Time=0.01 sec\n",
      "\n",
      "Best model:  ARIMA(0,1,0)(0,1,0)[12]          \n",
      "Total fit time: 1.016 seconds\n",
      "1413.9156490504201\n"
     ]
    }
   ],
   "source": [
    "# from pmdarima.arima import auto_arima\n",
    "# stepwise_model = auto_arima(df, start_p=1, start_q=1,\n",
    "#                            max_p=3, max_q=3, m=12,\n",
    "#                            start_P=0, seasonal=True,\n",
    "#                            d=1, D=1, trace=True,\n",
    "#                            error_action='ignore',  \n",
    "#                            suppress_warnings=True, \n",
    "#                            stepwise=True)\n",
    "# print(stepwise_model.aic())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:learn-env] *",
   "language": "python",
   "name": "conda-env-learn-env-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
